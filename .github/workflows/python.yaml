---
# yamllint disable rule:line-length
name: python-app-ci

on:
  pull_request:
    paths:
      - "demo-services/python-app/**"

jobs:
  test:
    strategy:
      matrix:
        # Generate jobs for running tests
        include:
          - check_name: black
            working_directory: "demo-services/python-app/"
            script: |
              pip install black
              black --check --no-color --exclude "deployment/*" .
            os: "ubuntu-latest"
          - check_name: yamllint
            working_directory: "demo-services/python-app/"
            script: |
              echo "############## Run lint for ##############"
              yamllint --list-files ./
              echo "#########################################"
              yamllint --no-warnings ./
            os: "ubuntu-latest"
          - check_name: kubeconform
            working_directory: "demo-services/python-app/deployment"
            script: |
              go install github.com/yannh/kubeconform/cmd/kubeconform@latest
              export PATH="$GOPATH/bin:$PATH"
              for values in $(ls kubeconform-values/); do
                echo "############## Run kubencnform for $values ##############"
                helm template -f kubeconform-values/$values  . |\
                kubeconform -schema-location default \
                -schema-location 'https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json' \
                -summary -output json
                echo "#########################################"
              done
            os: "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Running ${{ matrix.check_name }}
        working-directory: ${{ matrix.working_directory }}
        run: |
          echo '${{ matrix.script }}' > script.sh
          bash -c "$(cat script.sh)"
