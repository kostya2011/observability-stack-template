config:
  logLevel: info
  serverPort: 3101
  clients:
    - url: http://loki-gateway/loki/api/v1/push
  snippets:
    extraRelabelConfigs:
      # keep all kubernetes labels
      # https://github.com/grafana/loki/issues/3519#issuecomment-1282295008
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
    pipelineStages:
      - docker: {}
      - cri: {}
      - match:
          selector: '{app=~"grafana|prometheus"}'
          stages:
          - regex:
              expression: ".*(lvl|level)=(?P<level>[a-zA-Z]+).*(logger|component)=(?P<component>[a-zA-Z]+)"
          - labels:
              level:
              component:
      - labeldrop:
          - job
          - pod_template_hash
          - instance
      - match:
          selector: '{app_kubernetes_io_type="python"}'
          stages:
            - json:
                expressions:
                  py_log_type: type
            - labels:
                py_log_type:
            - match:
                selector: '{py_log_type="request"}'
                stages:
                  - json:
                      expressions:
                        correlation_id:
                        method:
                        protocol:
                        remote_ip:
                        response_content_type:
                        request:
                        response_status:
                  - template:
                      source: level
                      template: '{{ if regexMatch "^5[0-9][0-9]$" .response_status }}ERROR{{ else }}INFO{{ end }}'
                  - labels:
                      correlation_id:
                      method:
                      request:
                      response_status:
                      level:
                  - template:
                      source: output_msg
                      template: '[{{ .remote_ip}} ] {{ .method }} {{ .request }} {{ .response_status}} | {{ .protocol}} | {{ .response_content_type }}'
                  - output:
                      source: output_msg
            - match:
                selector: '{py_log_type="log"}'
                stages:
                  - json:
                      expressions:
                        correlation_id:
                        msg:
                        logger:
                        thread:
                        module:
                        extra_property:
                        level:
                        exc_info:
                  - labels:
                      correlation_id:
                      logger:
                      thread:
                      module:
                      level:
                      exc_info:
                  - template:
                      source: output_msg
                      template: '{{ or .msg "" }} {{ or .exc_info "" }}'
                  - output:
                      source: output_msg
